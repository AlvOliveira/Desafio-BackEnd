// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motto.MR.DataAccess.Contexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Motto.MR.DataAccess.Migrations
{
    [DbContext(typeof(MottoMRContext))]
    [Migration("20240912003702_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Motto.MR.Shared.Models.DeliveryPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Cnpj");

                    b.Property<string>("DriverLicenseImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("DriverLicenseImagePath");

                    b.Property<string>("DriverLicenseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DriverLicenseNumber");

                    b.Property<string>("DriverLicenseType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("DriverLicenseType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.HasIndex("DriverLicenseNumber")
                        .IsUnique();

                    b.ToTable("DeliveryPersons", (string)null);
                });

            modelBuilder.Entity("Motto.MR.Shared.Models.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Identifier");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("LicensePlate");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Model");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("LicensePlate")
                        .IsUnique();

                    b.ToTable("Motorcycles", (string)null);
                });

            modelBuilder.Entity("Motto.MR.Shared.Models.MotorcycleRegisterLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Identifier");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("LicensePlate");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Model");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("LicensePlate")
                        .IsUnique();

                    b.ToTable("MotorcycleRegisterLogs", (string)null);
                });

            modelBuilder.Entity("Motto.MR.Shared.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryPersonId")
                        .HasColumnType("integer")
                        .HasColumnName("DeliveryPersonId");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EndDate");

                    b.Property<DateTime>("ExpectedEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExpectedEndDate");

                    b.Property<int>("MotorcycleId")
                        .HasColumnType("integer")
                        .HasColumnName("MotorcycleId");

                    b.Property<int>("RentalPlanId")
                        .HasColumnType("integer")
                        .HasColumnName("RentalPlanId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartDate");

                    b.Property<decimal>("TotalFines")
                        .HasColumnType("numeric")
                        .HasColumnName("TotalFines");

                    b.Property<decimal>("TotalRentalCost")
                        .HasColumnType("numeric")
                        .HasColumnName("TotalRentalCost");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryPersonId");

                    b.HasIndex("MotorcycleId");

                    b.HasIndex("RentalPlanId");

                    b.ToTable("Rentals", (string)null);
                });

            modelBuilder.Entity("Motto.MR.Shared.Models.RentalPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AdditionalDailyCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("AdditionalDailyCost");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created");

                    b.Property<decimal>("DailyCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("DailyCost");

                    b.Property<int>("Days")
                        .HasColumnType("integer")
                        .HasColumnName("Days");

                    b.Property<decimal?>("PenaltyPercentage")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("PenaltyPercentage");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated");

                    b.HasKey("Id");

                    b.ToTable("RentalPlans", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalDailyCost = 50.00m,
                            Created = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9493),
                            DailyCost = 30.00m,
                            Days = 7,
                            PenaltyPercentage = 20.00m,
                            Updated = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9738)
                        },
                        new
                        {
                            Id = 2,
                            AdditionalDailyCost = 50.00m,
                            Created = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9963),
                            DailyCost = 28.00m,
                            Days = 15,
                            PenaltyPercentage = 40.00m,
                            Updated = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9964)
                        },
                        new
                        {
                            Id = 3,
                            AdditionalDailyCost = 50.00m,
                            Created = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9966),
                            DailyCost = 22.00m,
                            Days = 30,
                            Updated = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9966)
                        },
                        new
                        {
                            Id = 4,
                            AdditionalDailyCost = 50.00m,
                            Created = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9968),
                            DailyCost = 20.00m,
                            Days = 45,
                            Updated = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9968)
                        },
                        new
                        {
                            Id = 5,
                            AdditionalDailyCost = 50.00m,
                            Created = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9970),
                            DailyCost = 18.00m,
                            Days = 50,
                            Updated = new DateTime(2024, 9, 12, 0, 37, 2, 246, DateTimeKind.Utc).AddTicks(9970)
                        });
                });

            modelBuilder.Entity("Motto.MR.Shared.Models.Rental", b =>
                {
                    b.HasOne("Motto.MR.Shared.Models.DeliveryPerson", "DeliveryPerson")
                        .WithMany()
                        .HasForeignKey("DeliveryPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Motto.MR.Shared.Models.Motorcycle", "Motorcycle")
                        .WithMany()
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Motto.MR.Shared.Models.RentalPlan", "RentalPlan")
                        .WithMany()
                        .HasForeignKey("RentalPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryPerson");

                    b.Navigation("Motorcycle");

                    b.Navigation("RentalPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
